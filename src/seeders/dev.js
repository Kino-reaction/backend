'use strict';

const crypto = require('../core/crypto');
const { shuffle, randomInt } = require('../utils');

const movies = [{
  "adult": false,
  "backdrop_path": "/iQFcwSGbZXMkeyKrxbPnwnRo5fl.jpg",
  "genres": [
    { "id": 28, name: "боевик" },
    { "id": 12, name: "приключения" },
    { "id": 878, name: "фантастика" }
  ],
  "id": 634649,
  "original_language": "en",
  "original_title": "Spider-Man: No Way Home",
  "overview": "Действие фильма «Человек-паук: Нет пути домой» начинает своё развитие в тот момент, когда Мистерио удаётся выяснить истинную личность Человека-паука. С этого момента жизнь Питера Паркера становится невыносимой. Если ранее он мог успешно переключаться между своими амплуа, то сейчас это сделать невозможно. Переворачивается с ног на голову не только жизнь Человека-пауку, но и репутация. Понимая, что так жить невозможно, главный герой фильма «Человек-паук: Нет пути домой» принимает решение обратиться за помощью к своему давнему знакомому Стивену Стрэнджу. Питер Паркер надеется, что с помощью магии он сможет восстановить его анонимность. Стрэндж соглашается помочь.",
  "popularity": 16007.82,
  "poster_path": "/zpH4yEqOJOReykVcSQYA1A258SQ.jpg",
  "release_date": "2021-12-15",
  "title": "Человек-паук: Нет пути домой",
  "video": false,
  "vote_average": 8.4,
  "vote_count": 6941
},
{
  "adult": false,
  "backdrop_path": "/k2twTjSddgLc1oFFHVibfxp2kQV.jpg",
  "genres": [
    { "id": 28, name: "боевик" },
    { "id": 12, name: "приключения" },
    { "id": 14, name: "фэнтези" },
    { "id": 878, name: "фантастика" }
  ],
  "id": 524434,
  "original_language": "en",
  "original_title": "Eternals",
  "overview": "Много тысячелетий назад с планеты Олимпия на Землю была отправлена группа сверхлюдей, обладающих суперспособностями, — Вечные. С доисторических времён они защищали человечество от нападений ужасных чудовищ девиантов, но любое другое вмешательство в развитие цивилизации им было запрещено. Начало XXI века. Уже несколько столетий прошло с тех пор, как был уничтожен последний девиант, когда после странного землетрясения внезапно объявляется новый монстр. Теперь живущим в разных уголках планеты Вечным снова придётся сплотить силы, чтобы противостоять новой угрозе.",
  "popularity": 4700.068,
  "poster_path": "/iCQTxIgEpNYvPfHvEuZkDcmWItU.jpg",
  "release_date": "2021-11-03",
  "title": "Вечные",
  "video": false,
  "vote_average": 7.2,
  "vote_count": 3935
},
{
  "adult": false,
  "backdrop_path": "/3G1Q5xF40HkUBJXxt2DQgQzKTp5.jpg",
  "genres": [
    { "id": 16, name: "мультфильм" },
    { "id": 35, name: "комедия" },
    { "id": 10751, name: "семейный" },
    { "id": 14, name: "фэнтези" }
  ],
  "id": 568124,
  "original_language": "en",
  "original_title": "Encanto",
  "overview": "Удивительная семья Мадригалов живет в спрятанном в горах Колумбии волшебном доме, расположенном в чудесном и очаровательном уголке под названием Энканто. Каждого ребёнка в семье Мадригалов магия этого места благословила уникальным даром — от суперсилы до способности исцелять. Увы, магия обошла стороной одну лишь юную Мирабель. Обнаружив, что магия Энканто находится в опасности, Мирабель решает, что именно она может быть последней надеждой на спасение своей особенной семьи.",
  "popularity": 3684.767,
  "poster_path": "/yAw00ke7CzSLe4mMuCGkAzma69K.jpg",
  "release_date": "2021-11-24",
  "title": "Энканто",
  "video": false,
  "vote_average": 7.8,
  "vote_count": 3852
}];

const countries = [
  {
    name: "Россия"
  },
  {
    name: "СССР"
  },
  {
    name: "США"
  },
  {
    name: "Франция"
  },
  {
    name: "Италия"
  },
  {
    name: "Испания"
  },
  {
    name: "Великобритания"
  },
  {
    name: "Германия"
  },
  {
    name: "Корея Южная"
  },
  {
    name: "Япония"
  },
  {
    name: "Австралия"
  },
  {
    name: "Австрия"
  },
  {
    name: "Азербайджан"
  },
  {
    name: "Албания"
  },
  {
    name: "Алжир"
  },
  {
    name: "Американские Виргинские острова"
  },
  {
    name: "Американское Самоа"
  },
  {
    name: "Ангола"
  },
  {
    name: "Андорра"
  },
  {
    name: "Антарктида"
  },
  {
    name: "Антигуа и Барбуда"
  },
  {
    name: "Антильские Острова"
  },
  {
    name: "Аргентина"
  },
  {
    name: "Армения"
  },
  {
    name: "Аруба"
  },
  {
    name: "Афганистан"
  },
  {
    name: "Багамы"
  },
  {
    name: "Бангладеш"
  },
  {
    name: "Барбадос"
  },
  {
    name: "Бахрейн"
  },
  {
    name: "Беларусь"
  },
  {
    name: "Белиз"
  },
  {
    name: "Бельгия"
  },
  {
    name: "Бенин"
  },
  {
    name: "Берег Слоновой кости"
  },
  {
    name: "Бермуды"
  },
  {
    name: "Бирма"
  },
  {
    name: "Болгария"
  },
  {
    name: "Боливия"
  },
  {
    name: "Босния"
  },
  {
    name: "Босния и Герцеговина"
  },
  {
    name: "Ботсвана"
  },
  {
    name: "Бразилия"
  },
  {
    name: "Бруней-Даруссалам"
  },
  {
    name: "Буркина-Фасо"
  },
  {
    name: "Бурунди"
  },
  {
    name: "Бутан"
  },
  {
    name: "Вануату"
  },
  {
    name: "Ватикан"
  },
  {
    name: "Венгрия"
  },
  {
    name: "Венесуэла"
  },
  {
    name: "Виргинские Острова"
  },
  {
    name: "Внешние малые острова США"
  },
  {
    name: "Вьетнам"
  },
  {
    name: "Вьетнам Северный"
  },
  {
    name: "Габон"
  },
  {
    name: "Гаити"
  },
  {
    name: "Гайана"
  },
  {
    name: "Гамбия"
  },
  {
    name: "Гана"
  },
  {
    name: "Гваделупа"
  },
  {
    name: "Гватемала"
  },
  {
    name: "Гвинея"
  },
  {
    name: "Гвинея-Бисау"
  },
  {
    name: "Германия (ГДР)"
  },
  {
    name: "Германия (ФРГ)"
  },
  {
    name: "Гибралтар"
  },
  {
    name: "Гондурас"
  },
  {
    name: "Гонконг"
  },
  {
    name: "Гренада"
  },
  {
    name: "Гренландия"
  },
  {
    name: "Греция"
  },
  {
    name: "Грузия"
  },
  {
    name: "Гуам"
  },
  {
    name: "Дания"
  },
  {
    name: "Джибути"
  },
  {
    name: "Доминика"
  },
  {
    name: "Доминикана"
  },
  {
    name: "Египет"
  },
  {
    name: "Заир"
  },
  {
    name: "Замбия"
  },
  {
    name: "Западная Сахара"
  },
  {
    name: "Зимбабве"
  },
  {
    name: "Израиль"
  },
  {
    name: "Индия"
  },
  {
    name: "Индонезия"
  },
  {
    name: "Иордания"
  },
  {
    name: "Ирак"
  },
  {
    name: "Иран"
  },
  {
    name: "Ирландия"
  },
  {
    name: "Исландия"
  },
  {
    name: "Йемен"
  },
  {
    name: "Кабо-Верде"
  },
  {
    name: "Казахстан"
  },
  {
    name: "Каймановы острова"
  },
  {
    name: "Камбоджа"
  },
  {
    name: "Камерун"
  },
  {
    name: "Канада"
  },
  {
    name: "Катар"
  },
  {
    name: "Кения"
  },
  {
    name: "Кипр"
  },
  {
    name: "Киргизия"
  },
  {
    name: "Кирибати"
  },
  {
    name: "Китай"
  },
  {
    name: "Колумбия"
  },
  {
    name: "Коморы"
  },
  {
    name: "Конго"
  },
  {
    name: "Конго (ДРК)"
  },
  {
    name: "Корея"
  },
  {
    name: "Корея Северная"
  },
  {
    name: "Косово"
  },
  {
    name: "Коста-Рика"
  },
  {
    name: "Кот-д’Ивуар"
  },
  {
    name: "Куба"
  },
  {
    name: "Кувейт"
  },
  {
    name: "Лаос"
  },
  {
    name: "Латвия"
  },
  {
    name: "Лесото"
  },
  {
    name: "Либерия"
  },
  {
    name: "Ливан"
  },
  {
    name: "Ливия"
  },
  {
    name: "Литва"
  },
  {
    name: "Лихтенштейн"
  },
  {
    name: "Люксембург"
  },
  {
    name: "Маврикий"
  },
  {
    name: "Мавритания"
  },
  {
    name: "Мадагаскар"
  },
  {
    name: "Макао"
  },
  {
    name: "Македония"
  },
  {
    name: "Малави"
  },
  {
    name: "Малайзия"
  },
  {
    name: "Мали"
  },
  {
    name: "Мальдивы"
  },
  {
    name: "Мальта"
  },
  {
    name: "Марокко"
  },
  {
    name: "Мартиника"
  },
  {
    name: "Маршалловы острова"
  },
  {
    name: "Масаи"
  },
  {
    name: "Мексика"
  },
  {
    name: "Мелкие отдаленные острова США"
  },
  {
    name: "Мозамбик"
  },
  {
    name: "Молдова"
  },
  {
    name: "Монако"
  },
  {
    name: "Монголия"
  },
  {
    name: "Монтсеррат"
  },
  {
    name: "Мьянма"
  },
  {
    name: "Намибия"
  },
  {
    name: "Непал"
  },
  {
    name: "Нигер"
  },
  {
    name: "Нигерия"
  },
  {
    name: "Нидерланды"
  },
  {
    name: "Никарагуа"
  },
  {
    name: "Новая Зеландия"
  },
  {
    name: "Новая Каледония"
  },
  {
    name: "Норвегия"
  },
  {
    name: "ОАЭ"
  },
  {
    name: "Оккупированная Палестинская территория"
  },
  {
    name: "Оман"
  },
  {
    name: "Остров Мэн"
  },
  {
    name: "Остров Святой Елены"
  },
  {
    name: "Острова Кука"
  },
  {
    name: "острова Теркс и Кайкос"
  },
  {
    name: "Пакистан"
  },
  {
    name: "Палау"
  },
  {
    name: "Палестина"
  },
  {
    name: "Панама"
  },
  {
    name: "Папуа - Новая Гвинея"
  },
  {
    name: "Парагвай"
  },
  {
    name: "Перу"
  },
  {
    name: "Польша"
  },
  {
    name: "Португалия"
  },
  {
    name: "Пуэрто Рико"
  },
  {
    name: "Реюньон"
  },
  {
    name: "Российская империя"
  },
  {
    name: "Руанда"
  },
  {
    name: "Румыния"
  },
  {
    name: "Сальвадор"
  },
  {
    name: "Самоа"
  },
  {
    name: "Сан-Марино"
  },
  {
    name: "Сан-Томе и Принсипи"
  },
  {
    name: "Саудовская Аравия"
  },
  {
    name: "Свазиленд"
  },
  {
    name: "Северная Македония"
  },
  {
    name: "Сейшельские острова"
  },
  {
    name: "Сенегал"
  },
  {
    name: "Сент-Винсент и Гренадины"
  },
  {
    name: "Сент-Китс и Невис"
  },
  {
    name: "Сент-Люсия "
  },
  {
    name: "Сербия"
  },
  {
    name: "Сербия и Черногория"
  },
  {
    name: "Сиам"
  },
  {
    name: "Сингапур"
  },
  {
    name: "Сирия"
  },
  {
    name: "Словакия"
  },
  {
    name: "Словения"
  },
  {
    name: "Соломоновы Острова"
  },
  {
    name: "Сомали"
  },
  {
    name: "Судан"
  },
  {
    name: "Суринам"
  },
  {
    name: "Сьерра-Леоне"
  },
  {
    name: "Таджикистан"
  },
  {
    name: "Таиланд"
  },
  {
    name: "Тайвань"
  },
  {
    name: "Танзания"
  },
  {
    name: "Тимор-Лесте"
  },
  {
    name: "Того"
  },
  {
    name: "Тонга"
  },
  {
    name: "Тринидад и Тобаго"
  },
  {
    name: "Тувалу"
  },
  {
    name: "Тунис"
  },
  {
    name: "Туркменистан"
  },
  {
    name: "Турция"
  },
  {
    name: "Уганда"
  },
  {
    name: "Узбекистан"
  },
  {
    name: "Украина"
  },
  {
    name: "Уоллис и Футуна"
  },
  {
    name: "Уругвай"
  },
  {
    name: "Фарерские острова"
  },
  {
    name: "Федеративные Штаты Микронезии"
  },
  {
    name: "Фиджи"
  },
  {
    name: "Филиппины"
  },
  {
    name: "Финляндия"
  },
  {
    name: "Фолклендские острова"
  },
  {
    name: "Французская Гвиана"
  },
  {
    name: "Французская Полинезия"
  },
  {
    name: "Хорватия"
  },
  {
    name: "ЦАР"
  },
  {
    name: "Чад"
  },
  {
    name: "Черногория"
  },
  {
    name: "Чехия"
  },
  {
    name: "Чехословакия"
  },
  {
    name: "Чили"
  },
  {
    name: "Швейцария"
  },
  {
    name: "Швеция"
  },
  {
    name: "Шпицберген и Ян-Майен"
  },
  {
    name: "Шри-Ланка"
  },
  {
    name: "Эквадор"
  },
  {
    name: "Экваториальная Гвинея"
  },
  {
    name: "Эритрея"
  },
  {
    name: "Эстония"
  },
  {
    name: "Эфиопия"
  },
  {
    name: "ЮАР"
  },
  {
    name: "Югославия"
  },
  {
    name: "Югославия (ФР)"
  },
  {
    name: "Ямайка"
  }
];

const genres = [
  { name: 'аниме' },
  { name: 'биография' },
  { name: 'боевик' },
  { name: 'вестерн' },
  { name: 'военный' },
  { name: 'детектив' },
  { name: 'детский' },
  { name: 'документальный' },
  { name: 'драма' },
  { name: 'игра' },
  { name: 'исторический' },
  { name: 'комедия' },
  { name: 'концерт' },
  { name: 'короткометражка' },
  { name: 'криминал' },
  { name: 'мелодрама' },
  { name: 'музыкальный' },
  { name: 'мультфильм' },
  { name: 'мюзикл' },
  { name: 'новости' },
  { name: 'приключения' },
  { name: 'реальное ТВ' },
  { name: 'семейный' },
  { name: 'спортивный' },
  { name: 'ток-шоу' },
  { name: 'триллер' },
  { name: 'ужасы' },
  { name: 'фантастика' },
  { name: 'фильм-нуар' },
  { name: 'фэнтези' },
  { name: 'церемония' }
];

const titles = [
  'Как я попробовал фильм, и к чему привел этот необдуманный шаг',
  '17 дешевых и веселых идей для фильма',
  'Почему фильм не оставит вас равнодушным',
  'Как избавиться от проблема с фильмом раз и навсегда',
  'Как избавиться от проблема с фильмом раз и навсегда',
  'Управляй желаниями! Почему фильм способен привлечь к вам клиентов и партнеров',
  'Думайте что угодно о фильме, но на самом деле правда такова'
];

const contents = [
  'Вы услышите сейчас все подробности из первых уст: что было, к чему привело, какие проблемы решились, достигнуты ли результаты. Настоящая интрига: так что же с ним стало? История от первого лица непременно заинтересуют читателей.',
  'Вовлекайте читателей в диалог с первых слов. Главный герой фильма «Трасса 60». Не смотрели? Лишний повод узнать, кто он. Уже в курсе? Так что бы он сказал по теме статьи?',
  '53 новых и горячих советов о фильме.',
];

const movieIds = movies.map((movie) => movie.id);

const users = [{
  name: 'John Doe',
  _password: crypto.hash('123456'),
  email: 'example@mail.com'
}, {
  name: 'Jane Ho',
  _password: crypto.hash('123456'),
  email: 'jane@mail.com'
}];

module.exports.seed = async (knex) => {
  const { count } = knex.userParams;

  await knex('settings').truncate();
  await knex('users').truncate();
  await knex('genres').truncate();
  await knex('countries').truncate();
  await knex('persons').truncate();
  await knex('movies_countries').truncate();
  await knex('movies_genres').truncate();
  await knex('reviews').truncate();
  await knex('comments').truncate();

  await knex('settings').insert({
    key: 'featured_movies',
    value: JSON.stringify(movies)
  });
  await knex('genres').insert(genres);
  await knex('countries').insert(countries);
  await knex('users').insert(users);

  const userIds = (await knex.select('id').from('users')).map((data) => data.id);
  const reviews = [...Array(count).keys()].map(() => {
    const movieId = shuffle(movieIds)[randomInt(0, movieIds.length - 1)];
    const movie = movies.find(({ id }) => id === movieId);
    return ({
      title: shuffle(titles)[randomInt(0, titles.length - 1)],
      content: shuffle(contents).join(' '),
      movieId: shuffle(movieIds)[randomInt(0, movieIds.length - 1)],
      movie,
      authorId: shuffle(userIds)[randomInt(0, userIds.length - 1)],
      rating: randomInt(0, 10)
    });
  });

  await knex('reviews').insert(reviews);
  const reviewIds = (await knex.select('id').from('reviews')).map(({ id }) => id);
  await Promise.all(reviewIds.map((id) => knex('comments')
    .insert(Array.from(Array(randomInt(20, 60)).keys()).map(() => ({
      content: shuffle(contents)[randomInt(0, contents.length - 1)],
      commentableType: 'Review',
      commentableId: id,
      authorId: shuffle(userIds)[randomInt(0, userIds.length - 1)]
    })))
  ));
};
